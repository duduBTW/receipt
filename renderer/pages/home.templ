package pages

import (
	"fmt"
	"github.com/dudubtw/receipt/constants"
	"github.com/dudubtw/receipt/models"
	"github.com/dudubtw/receipt/renderer/components"
	"strconv"
)

type HomeProps struct {
	Categories []models.Category
}

var HomeTabs = []components.TabItemProps{
	{
		Label:    "Categorias",
		Value:    "categories",
		IsActive: true,
	},
	{
		Label: "Date",
		Value: "date",
	},
}

templ TestCategories() {
	<div>Categories</div>
}

templ TestDate() {
	<div>date</div>
}

templ Home(props HomeProps) {
	<div class="container mx-auto px-4 py-8">
		@Tabs(TabsProps{
			Items: HomeTabs,
			Body: CategoriesComponent(CategoriesComponentProps{
				Categories: props.Categories,
			}),
		})
	</div>
	@components.StartScript(constants.JsFunctionsCreateCategory, constants.JsFunctionsHome)
	@templ.JSONScript(constants.IdHomeData, props.Categories)
}

type TabsProps struct {
	Items []components.TabItemProps
	Body  templ.Component
}

templ Tabs(props TabsProps) {
	<div class="flex flex-col gap-6" id={ constants.IdHomeTabs }>
		@templ.Join(TabsContent(TabsContentProps{Items: props.Items}), props.Body)
	</div>
}

type TabsContentProps struct {
	Items []components.TabItemProps
}

templ TabsContent(props TabsContentProps) {
	@components.Tabs(components.TabProps{
		Items: props.Items,
	})
}

type CategoriesComponentProps struct {
	Categories []models.Category
}

templ CategoriesComponent(props CategoriesComponentProps) {
	<div class="grid grid-cols-3 gap-2">
		for _, category := range props.Categories {
			@CategoryCard(category)
		}
	</div>
}

func getCategoryHSL(category models.Category, Lightness int) string {
	return fmt.Sprintf("hsl(%d %d%% %d%%)", category.Hue, category.Saturation, Lightness)
}

css categoryBackground(category models.Category, Lightness int) {
	--category-bg: { templ.SafeCSSProperty(getCategoryHSL(category, Lightness)) };
	--category-bg-hover: { templ.SafeCSSProperty(getCategoryHSL(category, Lightness+4)) };
}

css categoryColor(category models.Category, Lightness int) {
	color: { templ.SafeCSSProperty(getCategoryHSL(category, Lightness)) };
}

templ CategoryCard(category models.Category) {
	{{ href := constants.ReceiptRoute + "?" + constants.ReceiptSearchParamCategory + "=" + strconv.FormatInt(category.ID, 10) }}
	<div id={ constants.IdCategoryCard } class={ categoryBackground(category, 10), "px-[10px] py-2 rounded flex items-center gap-[10px] bg-[var(--category-bg)] hover:bg-[var(--category-bg-hover)] transition-colors", }>
		<div class="bg-background-900 w-10 h-10 rounded-full flex items-center justify-center">
			<i data-lucide={ category.LucideIconName } class={ categoryColor(category, 40) }></i>
		</div>
		<a href={ templ.URL(href) } class="font-semibold">
			{ category.Name }
		</a>
	</div>
}
