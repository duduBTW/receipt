package pages

import (
	"github.com/dudubtw/receipt/constants"
	"github.com/dudubtw/receipt/models"
	"github.com/dudubtw/receipt/renderer/components"
	"strconv"
	"time"
)

type ReceiptsPageProps struct {
	GruppedReceipt          models.ReceiptByYear
	Categories              []models.Category
	DefaultCategorySelected int64
}

templ ReceiptsPage(props ReceiptsPageProps) {
	<div class="container mx-auto px-4 py-8 flex flex-col gap-6">
		@components.CategorySelectComponent(components.CategorySelectComponentProps{
			Id:              constants.IdReceiptsSelectCategory,
			Categories:      props.Categories,
			DefaultSelected: props.DefaultCategorySelected,
		})
		for year, receipts := range props.GruppedReceipt {
			<div>
				<h2 class="pb-3 text-gray-300 font-bold text-sm">{ strconv.Itoa(year) }</h2>
				<div class="grid grid-cols-4 gap-3">
					for _, receipt := range receipts {
						@ReceiptCard(ReceiptCardProps{Receipt: receipt})
					}
				</div>
			</div>
		}
	</div>
	@components.StartScript(constants.JsFunctionsCreateCategory, constants.JsFunctionsReceipts)
}

type ReceiptCardProps struct {
	Receipt models.Receipt
}

templ ReceiptCard(props ReceiptCardProps) {
	{{ date, _ := time.Parse("2006-01-02", props.Receipt.Date) }}
	<div { templ.Attributes{ constants.DataRecepitId: strconv.FormatInt(props.Receipt.ID, 10)}... } id={ constants.IdReceiptCard } class="flex flex-col gap-3 p-3 rounded-lg bg-background-700 hover:bg-background-600 focus-within:bg-background-600 transition-colors focus-within:ring focus-within:ring-purple-500">
		<img id={ constants.IdReceiptCardImage } class="w-full h-[190px] min-h-[190px] max-h-[190px] object-cover rounded" src={ props.Receipt.ImageName }/>
		<button type="button" class="font-medium leading-none focus:outline-none">{ date.Format("02/01/2006") }</button>
	</div>
}
